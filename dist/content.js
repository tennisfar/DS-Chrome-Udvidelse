/*! For license information please see content.js.LICENSE.txt */
(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}var e=function(t){var e,n=location.host.split("."),r=location.protocol+"//",o=n[0].includes("town");return e=n[0].includes("web")?"web.".concat(n[1]):o?"".concat(n[0],"edit").concat(t?"dlo":"dli"):"edit".concat(t?"dlo":"dli"),"".concat(r).concat(e,".danskespil.dk/sitecore/shell/Applications/Content%20Editor.aspx?sc_bw=1&fo=/sitecore/content/DanskeSpil/Site%20settings/Dictionary/")},n=function(){var t=function(t){var e=document.getElementById(t);e&&e.remove()};t("findTextInDictionaries"),t("findTextInDictionariesStyle")},r=function(t,e){var n=document.getElementById(t);return n||(n=e(),document.body.appendChild(n)),n},o=function(t){var e,n,o=r("findTextInDictionaries",(function(){var t=document.createElement("div");return t.id="findTextInDictionaries",t}));o.innerText="",e=r("findTextInDictionariesStyle",(function(){var t=document.createElement("style");return t.id="findTextInDictionariesStyle",t})),n='\n        #findTextInDictionaries {\n          position: fixed;\n          z-index: 1000000001;\n          left: 0;\n          top: 100vh;\n          font-size: 12px;\n          line-height: 1.2;\n          background: #ededed;\n          padding: 15px 20px;\n          box-shadow: 0 1px 13px 1px #ccc;\n          max-height: 95vh;\n          max-width: 95vw;\n        }\n        \n        #findTextInDictionaries::after {\n          position: absolute;\n          z-index: 1000000000;\n          content: "'.concat(t.length,'";\n          top: -35px;\n          left: 10px;\n          width: 40px;\n          height: 40px;\n          background: #bdffe5;\n          color: black;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          border-radius: 50% 50% 0 0;\n        }\n        \n        #findTextInDictionaries:hover {\n          top: auto;\n          bottom: 0;\n          overflow: auto;\n        }\n        \n        #findTextInDictionaries a {\n          text-decoration: none;\n        }\n        \n        #findTextInDictionaries a:hover {\n          text-decoration: underline;\n        }\n        \n        #findTextInDictionaries p {\n          background: white;\n          padding: 10px;\n          margin-bottom: 5px;\n        }\n        \n        #findTextInDictionaries a {\n          margin: 0 0 5px 10px;\n          display: inline-block;\n        }\n        '),e.innerText=n,t.forEach((function(t){var e=t.txt,n=t.url,r=t.key,i=document.createElement("div"),a=document.createElement("p"),c=document.createElement("a");a.innerText=e,c.href=n,c.target="_blank",c.text=r,i.appendChild(a),i.appendChild(c),o.appendChild(i)}))};function i(t){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},i(t)}function a(){a=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,o=Object.defineProperty||function(t,e,n){t[e]=n.value},c="function"==typeof Symbol?Symbol:{},u=c.iterator||"@@iterator",s=c.asyncIterator||"@@asyncIterator",l=c.toStringTag||"@@toStringTag";function h(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{h({},"")}catch(t){h=function(t,e,n){return t[e]=n}}function f(t,e,n,r){var i=e&&e.prototype instanceof x?e:x,a=Object.create(i.prototype),c=new j(r||[]);return o(a,"_invoke",{value:T(t,n,c)}),a}function p(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}e.wrap=f;var d="suspendedStart",y="suspendedYield",m="executing",v="completed",g={};function x(){}function w(){}function b(){}var E={};h(E,u,(function(){return this}));var k=Object.getPrototypeOf,L=k&&k(k(_([])));L&&L!==n&&r.call(L,u)&&(E=L);var S=b.prototype=x.prototype=Object.create(E);function C(t){["next","throw","return"].forEach((function(e){h(t,e,(function(t){return this._invoke(e,t)}))}))}function F(t,e){function n(o,a,c,u){var s=p(t[o],t,a);if("throw"!==s.type){var l=s.arg,h=l.value;return h&&"object"==i(h)&&r.call(h,"__await")?e.resolve(h.__await).then((function(t){n("next",t,c,u)}),(function(t){n("throw",t,c,u)})):e.resolve(h).then((function(t){l.value=t,c(l)}),(function(t){return n("throw",t,c,u)}))}u(s.arg)}var a;o(this,"_invoke",{value:function(t,r){function o(){return new e((function(e,o){n(t,r,e,o)}))}return a=a?a.then(o,o):o()}})}function T(e,n,r){var o=d;return function(i,a){if(o===m)throw new Error("Generator is already running");if(o===v){if("throw"===i)throw a;return{value:t,done:!0}}for(r.method=i,r.arg=a;;){var c=r.delegate;if(c){var u=I(c,r);if(u){if(u===g)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(o===d)throw o=v,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);o=m;var s=p(e,n,r);if("normal"===s.type){if(o=r.done?v:y,s.arg===g)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(o=v,r.method="throw",r.arg=s.arg)}}}function I(e,n){var r=n.method,o=e.iterator[r];if(o===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,I(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),g;var i=p(o,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,g;var a=i.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,g):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,g)}function P(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function O(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function j(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(P,this),this.reset(!0)}function _(e){if(e||""===e){var n=e[u];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,a=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return a.next=a}}throw new TypeError(i(e)+" is not iterable")}return w.prototype=b,o(S,"constructor",{value:b,configurable:!0}),o(b,"constructor",{value:w,configurable:!0}),w.displayName=h(b,l,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===w||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,b):(t.__proto__=b,h(t,l,"GeneratorFunction")),t.prototype=Object.create(S),t},e.awrap=function(t){return{__await:t}},C(F.prototype),h(F.prototype,s,(function(){return this})),e.AsyncIterator=F,e.async=function(t,n,r,o,i){void 0===i&&(i=Promise);var a=new F(f(t,n,r,o),i);return e.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},C(S),h(S,l,"Generator"),h(S,u,(function(){return this})),h(S,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=_,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(O),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return c.type="throw",c.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],c=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var u=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(u&&s){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,g):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),g},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),O(n),g}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;O(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:_(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),g}},e}function c(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function u(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var i=t.apply(e,n);function a(t){c(i,r,o,a,u,"next",t)}function u(t){c(i,r,o,a,u,"throw",t)}a(void 0)}))}}var s=function(){var t=u(a().mark((function t(e){return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(document.querySelector(e)){t.next=5;break}return t.next=3,new Promise((function(t){return requestAnimationFrame(t)}));case 3:t.next=0;break;case 5:return t.abrupt("return",document.querySelector(e));case 6:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}();function l(){return(l=u(a().mark((function t(){var e,n,r,o,i;return a().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if("github.com"!==location.host||!location.search.includes("?newBranch=")){t.next=14;break}return e=new URLSearchParams(location.search),n=e.get("newBranch"),t.next=5,s('[app-name="repos-branches"] button');case 5:return null==(r=t.sent)||r.click(),t.next=9,s('[role=dialog][data-focus-trap="active"] input');case 9:(o=t.sent)&&setTimeout((function(){o.setAttribute("value",n),["input","change","keyup"].forEach((function(t){var e=new Event(t,{bubbles:!0,cancelable:!0});o.dispatchEvent(e)}))}),500),(i=new URL(window.location)).searchParams.delete("newBranch"),history.pushState({},"",i);case 14:case"end":return t.stop()}}),t)})))).apply(this,arguments)}var h="",f=!1,p="500px;",d=function(){document.querySelectorAll(".scContentControlSelectedList").forEach((function(t){if(!t.classList.contains("ChromeExtensionAddUrlToTreeListIds")){var e=t.querySelectorAll("select option"),n=t.parentElement.querySelector(".scContentControlTreeListHelp");n&&0!==e.length&&(t.classList.add("ChromeExtensionAddUrlToTreeListIds"),e.forEach((function(t){var e,r=null===(e=t.value)||void 0===e||null===(e=e.split("|"))||void 0===e?void 0:e[1];r&&t.addEventListener("click",(function(){var t=new URL(location.href);t.searchParams.set("fo",r),n.innerHTML.includes(r)||(n.innerHTML="".concat(n.innerHTML,' <a href="').concat(t.href,'" target="_blank" style="margin-left: 10px;">').concat(r,"</a>"))}))})))}}))},y=function(){return document.querySelector(".scContentTreeNodeActive span").innerText},m=function(){return document.querySelector(".scEditorQuickInfo tr:nth-child(3) .scEditorHeaderQuickInfoInput").value},v=function(){var t=y();if(t!==h){h=t;var e=document.querySelector("#bookmarkLink"),n=document.querySelector("#bookmarkStyle");e||((e=document.createElement("a")).id="bookmarkLink",document.querySelector("body").appendChild(e),(n=document.createElement("style")).id="bookmarkStyle",document.querySelector("body").appendChild(n)),e.href="javascript:window.location.href=window.location.origin+'/sitecore/shell/Applications/Content Editor.aspx?sc_bw=1&fo=".concat(m(),"'"),e.innerHTML=t,n.innerHTML="\n      #bookmarkLink {\n          position: fixed;\n          z-index: 1000000;\n          top: 11px;\n          left: 60px;\n          cursor: pointer;\n          height: 30px;\n          display: flex;\n          align-items: center;\n          font-size: 10px;\n          font-weight: 500;\n          font-family: 'Montserrat', 'Open Sans', Helvetica, Arial, sans-serif;\n          background: black;\n          color: white;\n          padding: 0 8px 0 7px;\n          box-shadow: 0 0 0px 1px #585858;\n          border-radius: 3px;\n          text-decoration: none;\n          line-height: 15px;\n      }\n    "}},g=function(){document.querySelectorAll(".scEditorSectionPanelCell .scContentControl.scContentControlTreelist").forEach((function(t){220===t.clientHeight&&(t.style.height="400px")}))},x=function(){var t=document.querySelectorAll(".scEditorFieldMarkerInputCell textarea");if(0!==t.length){if(!document.getElementById("fixInputCellTextArea")){var e=document.createElement("style");e.id="fixInputCellTextArea",e.innerHTML='\n      .monospace-font {font-family: Consolas, Monaco, "Andale Mono", "Ubuntu Mono", monospace;}\n    ',document.querySelector("body").appendChild(e)}t.forEach((function(t){t.classList.contains("monospace-font")||(t.classList.add("monospace-font"),t.setAttribute("spellcheck",!1),t.addEventListener("focus",(function(){this.style.height="800px",this.style.fontSize="13px",this.style.lineHeight="1.45"})),t.addEventListener("blur",(function(){this.style="height: ".concat(p)})))}))}},w=function(){if(document.querySelector('[id*="Section_Data"]')){var t=document.querySelector('[id*="Section_Data"]').parentElement.querySelector(".scContentControlTreelist");t&&(t.style="height: ".concat(p))}},b=function t(){var e=document.querySelector("#ChromeExtensionForSitecoreFavoritesStyle");e||((e=document.createElement("style")).id="ChromeExtensionForSitecoreFavoritesStyle",document.querySelector("body").appendChild(e),e.innerHTML="\n      .sc-globalHeader {\n        z-index: 101;\n      }\n      \n      #ChromeExtensionForSitecoreFavorites {\n        position: relative;\n        cursor: pointer;\n      }\n      #ChromeExtensionForSitecoreFavoritesPopup {\n        position: absolute;\n        z-index: 100000;\n        background: #2b2b2b;\n        top: 50px;\n        right: 10px;\n        min-width: 200px;\n        text-align: left;\n        padding: 0 5px 6px;\n      }\n      \n      .ChromeExtensionForSitecoreFavoritesPopupItem {\n        position: relative;\n        height: auto;\n        padding: 6px 7px;\n        line-height: 1.4;\n        font-size: 12px;\n        cursor: pointer;\n        padding-right: 35px;\n        white-space: nowrap;\n      }\n      .ChromeExtensionForSitecoreFavoritesPopupItem:hover {\n        background: black;\n        text-decoration: underline;\n      }\n      \n      .ChromeExtensionForSitecoreFavoritesPopupItem span.ChromeExtensionForSitecoreFavoritesPopupItemRemove {\n        position: absolute;\n        z-index: 1;\n        top: 5px;\n        right: 5px;\n        background: black;\n        width: 18px;\n        height: 18px;\n        text-align: center;\n      }\n      \n      .ChromeExtensionForSitecoreFavoritesPopupItem span.ChromeExtensionForSitecoreFavoritesPopupItemRemove:hover {\n        background: red; \n      }\n      \n      .ChromeExtensionForSitecoreFavoritesPopupItem span.ChromeExtensionForSitecoreFavoritesPopupItemParent {\n        color: #969696;\n      }\n    \n      #ChromeExtensionForSitecoreFavoritesPopupAddFavorite {\n        height: auto;\n        padding: 6px 7px;\n        line-height: 1.4;\n        font-size: 12px;\n        cursor: pointer;\n        background: red;\n        white-space: nowrap;\n      }"),chrome.storage.sync.get("favorites",(function(e){var n=e.favorites;(n=n||[]).length>1&&(n=n.sort((function(t,e){return t.path>e.path?1:-1})));var r=document.querySelector(".sc-accountInformation"),o=document.querySelector("#ChromeExtensionForSitecoreFavorites"),i=document.querySelector("#ChromeExtensionForSitecoreFavoritesPopup");if(o||((o=document.createElement("li")).id="ChromeExtensionForSitecoreFavorites",o.innerText="Favorites",r.insertBefore(o,r.firstChild),o.addEventListener("click",(function(){f=!f,t()}))),!f&&i&&o.removeChild(i),f){i||((i=document.createElement("div")).id="ChromeExtensionForSitecoreFavoritesPopup",o.appendChild(i)),n.forEach((function(e){var r=document.querySelector('[ChromeExtensionForSitecoreFavoritesPopupItem="'.concat(e.path,'"]'));if(!r){(r=document.createElement("div")).className="ChromeExtensionForSitecoreFavoritesPopupItem",r.setAttribute("ChromeExtensionForSitecoreFavoritesPopupItem",e.path),r.addEventListener("click",(function(){window.location.href="".concat(location.origin).concat(location.pathname,"?sc_bw=1&fo=").concat(e.path)})),r.appendChild(function(t){var e=t.path.split("/");e.pop(),e=e.join("/"),e="".concat(e,"/ ");var n=document.createElement("span");return n.className="ChromeExtensionForSitecoreFavoritesPopupItemParent",n.innerText=e,n}(e)),r.appendChild(function(t){var e=document.createElement("span");return e.innerText=t.label,e}(e));var o=document.createElement("span");o.className="ChromeExtensionForSitecoreFavoritesPopupItemRemove",o.innerText="x",o.addEventListener("click",(function(){n=n.filter((function(t){return t!==e})),chrome.storage.sync.set({favorites:n}),i.removeChild(r),t()})),r.appendChild(o),i.appendChild(r)}}));var a=document.querySelector('[ChromeExtensionForSitecoreFavoritesPopupItem = "'.concat(m(),'"]')),c=document.getElementById("ChromeExtensionForSitecoreFavoritesPopupAddFavorite");c&&i.removeChild(c),a||((c=document.createElement("div")).id="ChromeExtensionForSitecoreFavoritesPopupAddFavorite",c.innerText="Add ".concat(y()," ? "),c.addEventListener("click",(function(e){n.push({label:y(),path:m()}),chrome.storage.sync.set({favorites:n}),t()})),i.appendChild(c))}}))},E=function(){var t,e=null===(t=document.getElementById("EditorFrames"))||void 0===t?void 0:t.querySelector("div"),n="none"!==(null==e?void 0:e.style.display),r=null==e?void 0:e.querySelector("table.scEditorQuickInfo tbody");if(null!=e&&e.id&&n&&r&&!r.querySelector("#scToolMediaPath")){var o=document.createElement("tr");o.id="scToolMediaPath";var i=document.createElement("td"),a=document.createElement("td"),c=(document.createElement("style"),document.createElement("input"));c.setAttribute("readonly","readonly"),c.setAttribute("onclick","javascript:this.select();return false"),c.value="-/media/"+e.id.replace("FContent","")+".ashx",i.innerText="Relativ sti:",a.appendChild(c),o.appendChild(i),o.appendChild(a),r.appendChild(o)}},k=function(){var t,e;location.host.endsWith("danskespil.dk")&&(decodeURIComponent(location.pathname).match(/\/sitecore\/shell\/applications\/content[- ]editor\.aspx/i)&&(function(){var t=400;document.cookie="scContentEditorFoldersWidth=".concat(t,"; expires=Thu, 31 Dec 2100 12:00:00 UTC; path=/"),document.querySelector("#ContentTreePanel").style.width="".concat(t,"px"),document.querySelector(".splitter-bar-vertical").style.left="".concat(t,"px");var e=document.querySelector("#ContentEditor");e.style.width=parseInt(e.style.width)-t+parseInt(e.style.left)+"px",e.style.left="".concat(t,"px")}(),(e=(t=document.querySelectorAll(".scContentTreeNodeActive")[0]).parentElement.querySelector("img"))&&e.click(),t&&t.parentElement&&t.parentElement.scrollIntoView(),v(),setInterval(d,500),setInterval(g,500),setInterval(x,500),setInterval(v,500),setInterval(w,500),b(),document.addEventListener("click",(function(){return setTimeout(b,500)}))),decodeURIComponent(location.pathname).match(/\/sitecore\/shell\/applications\/content[- ]manager\/default\.aspx/i)&&setInterval(E,500))};function L(){var t=document.querySelector("#issuedetails #type-val"),e=document.querySelector(".issue-link"),n=document.querySelector("#summary-val");if(document.querySelector(".ghx-columns .ghx-issue.ghx-selected")&&(t=document.querySelector(".ghx-issue.ghx-selected .ghx-type"),e=document.querySelector(".ghx-issue.ghx-selected .ghx-key"),n=document.querySelector(".ghx-issue.ghx-selected .ghx-summary")),t&&e&&n)return t=(t=(t=t.innerText||t.title).trim().toLowerCase()).replace(/story/,"feature"),e=e.innerText.trim(),n=n.innerText.toLowerCase().replace(/[^a-z ]/g,"-").replace(/ /g,"-").replace(/--+/g,"-"),"".concat(t,"/").concat(e,"-").concat(n).slice(0,50).replace(/-$/,"")}window.makeBranchName=L;const S=L;function C(t){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},C(t)}function F(){F=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,o=Object.defineProperty||function(t,e,n){t[e]=n.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function s(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{s({},"")}catch(t){s=function(t,e,n){return t[e]=n}}function l(t,e,n,r){var i=e&&e.prototype instanceof v?e:v,a=Object.create(i.prototype),c=new j(r||[]);return o(a,"_invoke",{value:T(t,n,c)}),a}function h(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}e.wrap=l;var f="suspendedStart",p="suspendedYield",d="executing",y="completed",m={};function v(){}function g(){}function x(){}var w={};s(w,a,(function(){return this}));var b=Object.getPrototypeOf,E=b&&b(b(_([])));E&&E!==n&&r.call(E,a)&&(w=E);var k=x.prototype=v.prototype=Object.create(w);function L(t){["next","throw","return"].forEach((function(e){s(t,e,(function(t){return this._invoke(e,t)}))}))}function S(t,e){function n(o,i,a,c){var u=h(t[o],t,i);if("throw"!==u.type){var s=u.arg,l=s.value;return l&&"object"==C(l)&&r.call(l,"__await")?e.resolve(l.__await).then((function(t){n("next",t,a,c)}),(function(t){n("throw",t,a,c)})):e.resolve(l).then((function(t){s.value=t,a(s)}),(function(t){return n("throw",t,a,c)}))}c(u.arg)}var i;o(this,"_invoke",{value:function(t,r){function o(){return new e((function(e,o){n(t,r,e,o)}))}return i=i?i.then(o,o):o()}})}function T(e,n,r){var o=f;return function(i,a){if(o===d)throw new Error("Generator is already running");if(o===y){if("throw"===i)throw a;return{value:t,done:!0}}for(r.method=i,r.arg=a;;){var c=r.delegate;if(c){var u=I(c,r);if(u){if(u===m)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(o===f)throw o=y,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);o=d;var s=h(e,n,r);if("normal"===s.type){if(o=r.done?y:p,s.arg===m)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(o=y,r.method="throw",r.arg=s.arg)}}}function I(e,n){var r=n.method,o=e.iterator[r];if(o===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,I(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var i=h(o,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,m;var a=i.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function P(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function O(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function j(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(P,this),this.reset(!0)}function _(e){if(e||""===e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}throw new TypeError(C(e)+" is not iterable")}return g.prototype=x,o(k,"constructor",{value:x,configurable:!0}),o(x,"constructor",{value:g,configurable:!0}),g.displayName=s(x,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,x):(t.__proto__=x,s(t,u,"GeneratorFunction")),t.prototype=Object.create(k),t},e.awrap=function(t){return{__await:t}},L(S.prototype),s(S.prototype,c,(function(){return this})),e.AsyncIterator=S,e.async=function(t,n,r,o,i){void 0===i&&(i=Promise);var a=new S(l(t,n,r,o),i);return e.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},L(k),s(k,u,"Generator"),s(k,a,(function(){return this})),s(k,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=_,j.prototype={constructor:j,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(O),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return c.type="throw",c.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],c=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var u=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(u&&s){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),O(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;O(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:_(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}function T(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function I(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var i=t.apply(e,n);function a(t){T(i,r,o,a,c,"next",t)}function c(t){T(i,r,o,a,c,"throw",t)}a(void 0)}))}}var P=function(){var t=I(F().mark((function t(e){return F().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:if(document.querySelector(e)){t.next=5;break}return t.next=3,new Promise((function(t){return requestAnimationFrame(t)}));case 3:t.next=0;break;case 5:return t.abrupt("return",document.querySelector(e));case 6:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}(),O=function(){var t=I(F().mark((function t(){var e,n;return F().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,P(".aui-toolbar2-primary");case 2:return e=t.sent,(n=e.querySelector("#dsChromeExtensionJiraToolbar"))||((n=document.createElement("div")).id="dsChromeExtensionJiraToolbar",n.classList.add("aui-buttons"),e.appendChild(n)),t.abrupt("return",n);case 6:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();function j(){return location.host.includes("jira.danskespil.dk")&&location.pathname.startsWith("/browse/")}var _=function(){var t=I(F().mark((function t(e,n){var r,o;return F().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,O();case 2:r=t.sent,(o=document.createElement("a")).classList.add("aui-button"),o.innerText=e,o.addEventListener("click",n),r.appendChild(o);case 8:case"end":return t.stop()}}),t)})));return function(e,n){return t.apply(this,arguments)}}();function q(t){return q="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},q(t)}function N(){N=function(){return e};var t,e={},n=Object.prototype,r=n.hasOwnProperty,o=Object.defineProperty||function(t,e,n){t[e]=n.value},i="function"==typeof Symbol?Symbol:{},a=i.iterator||"@@iterator",c=i.asyncIterator||"@@asyncIterator",u=i.toStringTag||"@@toStringTag";function s(t,e,n){return Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}),t[e]}try{s({},"")}catch(t){s=function(t,e,n){return t[e]=n}}function l(t,e,n,r){var i=e&&e.prototype instanceof v?e:v,a=Object.create(i.prototype),c=new P(r||[]);return o(a,"_invoke",{value:C(t,n,c)}),a}function h(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}e.wrap=l;var f="suspendedStart",p="suspendedYield",d="executing",y="completed",m={};function v(){}function g(){}function x(){}var w={};s(w,a,(function(){return this}));var b=Object.getPrototypeOf,E=b&&b(b(O([])));E&&E!==n&&r.call(E,a)&&(w=E);var k=x.prototype=v.prototype=Object.create(w);function L(t){["next","throw","return"].forEach((function(e){s(t,e,(function(t){return this._invoke(e,t)}))}))}function S(t,e){function n(o,i,a,c){var u=h(t[o],t,i);if("throw"!==u.type){var s=u.arg,l=s.value;return l&&"object"==q(l)&&r.call(l,"__await")?e.resolve(l.__await).then((function(t){n("next",t,a,c)}),(function(t){n("throw",t,a,c)})):e.resolve(l).then((function(t){s.value=t,a(s)}),(function(t){return n("throw",t,a,c)}))}c(u.arg)}var i;o(this,"_invoke",{value:function(t,r){function o(){return new e((function(e,o){n(t,r,e,o)}))}return i=i?i.then(o,o):o()}})}function C(e,n,r){var o=f;return function(i,a){if(o===d)throw new Error("Generator is already running");if(o===y){if("throw"===i)throw a;return{value:t,done:!0}}for(r.method=i,r.arg=a;;){var c=r.delegate;if(c){var u=F(c,r);if(u){if(u===m)continue;return u}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(o===f)throw o=y,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);o=d;var s=h(e,n,r);if("normal"===s.type){if(o=r.done?y:p,s.arg===m)continue;return{value:s.arg,done:r.done}}"throw"===s.type&&(o=y,r.method="throw",r.arg=s.arg)}}}function F(e,n){var r=n.method,o=e.iterator[r];if(o===t)return n.delegate=null,"throw"===r&&e.iterator.return&&(n.method="return",n.arg=t,F(e,n),"throw"===n.method)||"return"!==r&&(n.method="throw",n.arg=new TypeError("The iterator does not provide a '"+r+"' method")),m;var i=h(o,e.iterator,n.arg);if("throw"===i.type)return n.method="throw",n.arg=i.arg,n.delegate=null,m;var a=i.arg;return a?a.done?(n[e.resultName]=a.value,n.next=e.nextLoc,"return"!==n.method&&(n.method="next",n.arg=t),n.delegate=null,m):a:(n.method="throw",n.arg=new TypeError("iterator result is not an object"),n.delegate=null,m)}function T(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function I(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function P(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(T,this),this.reset(!0)}function O(e){if(e||""===e){var n=e[a];if(n)return n.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,i=function n(){for(;++o<e.length;)if(r.call(e,o))return n.value=e[o],n.done=!1,n;return n.value=t,n.done=!0,n};return i.next=i}}throw new TypeError(q(e)+" is not iterable")}return g.prototype=x,o(k,"constructor",{value:x,configurable:!0}),o(x,"constructor",{value:g,configurable:!0}),g.displayName=s(x,u,"GeneratorFunction"),e.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===g||"GeneratorFunction"===(e.displayName||e.name))},e.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,x):(t.__proto__=x,s(t,u,"GeneratorFunction")),t.prototype=Object.create(k),t},e.awrap=function(t){return{__await:t}},L(S.prototype),s(S.prototype,c,(function(){return this})),e.AsyncIterator=S,e.async=function(t,n,r,o,i){void 0===i&&(i=Promise);var a=new S(l(t,n,r,o),i);return e.isGeneratorFunction(n)?a:a.next().then((function(t){return t.done?t.value:a.next()}))},L(k),s(k,u,"Generator"),s(k,a,(function(){return this})),s(k,"toString",(function(){return"[object Generator]"})),e.keys=function(t){var e=Object(t),n=[];for(var r in e)n.push(r);return n.reverse(),function t(){for(;n.length;){var r=n.pop();if(r in e)return t.value=r,t.done=!1,t}return t.done=!0,t}},e.values=O,P.prototype={constructor:P,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(I),!e)for(var n in this)"t"===n.charAt(0)&&r.call(this,n)&&!isNaN(+n.slice(1))&&(this[n]=t)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var n=this;function o(r,o){return c.type="throw",c.arg=e,n.next=r,o&&(n.method="next",n.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var a=this.tryEntries[i],c=a.completion;if("root"===a.tryLoc)return o("end");if(a.tryLoc<=this.prev){var u=r.call(a,"catchLoc"),s=r.call(a,"finallyLoc");if(u&&s){if(this.prev<a.catchLoc)return o(a.catchLoc,!0);if(this.prev<a.finallyLoc)return o(a.finallyLoc)}else if(u){if(this.prev<a.catchLoc)return o(a.catchLoc,!0)}else{if(!s)throw new Error("try statement without catch or finally");if(this.prev<a.finallyLoc)return o(a.finallyLoc)}}}},abrupt:function(t,e){for(var n=this.tryEntries.length-1;n>=0;--n){var o=this.tryEntries[n];if(o.tryLoc<=this.prev&&r.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===t||"continue"===t)&&i.tryLoc<=e&&e<=i.finallyLoc&&(i=null);var a=i?i.completion:{};return a.type=t,a.arg=e,i?(this.method="next",this.next=i.finallyLoc,m):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),m},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),I(n),m}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var o=r.arg;I(n)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,n,r){return this.delegate={iterator:O(e),resultName:n,nextLoc:r},"next"===this.method&&(this.arg=t),m}},e}function A(t,e,n,r,o,i,a){try{var c=t[i](a),u=c.value}catch(t){return void n(t)}c.done?e(u):Promise.resolve(u).then(r,o)}function G(t){return function(){var e=this,n=arguments;return new Promise((function(r,o){var i=t.apply(e,n);function a(t){A(i,r,o,a,c,"next",t)}function c(t){A(i,r,o,a,c,"throw",t)}a(void 0)}))}}var D,M=function(t){var e=document.querySelector(t);e&&(e.style.display="none")},z=["#header","#footer",".aui-sidebar-wrapper",".command-bar","#details-module","#viewissuesidebar","#activitymodule .horizontal-tabs",".aui-page-header-image","#attachmentmodule"],H=function(){var t=G(N().mark((function t(){return N().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,Promise.all(z.map(function(){var t=G(N().mark((function t(e){return N().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,P(e);case 2:case"end":return t.stop()}}),t)})));return function(e){return t.apply(this,arguments)}}()));case 2:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}(),B=function(){var t=G(N().mark((function t(){var e,n;return N().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:return z.map((function(t){return M(t)})),M("#linkingmodule"),M("#jpo-child-issues-web-panel"),t.next=5,P(".aui-page-panel");case 5:return t.sent.style="padding-left: 0",t.next=8,P(".aui-page-header-main");case 8:return t.sent.style="display: flex; flex-direction: column-reverse",t.next=11,P(".issue-view");case 11:return t.sent.style="height: unset",t.next=14,P(".issue-main-column");case 14:return t.sent.style='display: grid; grid-column-gap: 40px; grid-template-columns: 1fr 1fr; grid-template-areas: "description activity" "description add-comments";',t.next=17,P("#descriptionmodule");case 17:return t.sent.style="grid-area: description",t.next=20,P("#activitymodule");case 20:return t.sent.style="grid-area: activity",t.next=23,P("#addcomment");case 23:return t.sent.style="grid-area: add-comments",t.next=26,P("#descriptionmodule");case 26:return e=t.sent,t.next=29,P("#attachment_thumbnails");case 29:n=t.sent,e.appendChild(n);case 31:case"end":return t.stop()}}),t)})));return function(){return t.apply(this,arguments)}}();function U(){return(U=G(N().mark((function t(){return N().wrap((function(t){for(;;)switch(t.prev=t.next){case 0:j()&&H().then((function(){_("Focus",B)}));case 1:case"end":return t.stop()}}),t)})))).apply(this,arguments)}location.host.endsWith("danskespil.dk")&&!location.pathname.startsWith("/sitecore/")&&document.addEventListener("selectionchange",(function(){var r=window.getSelection().toString().toLowerCase();if((null==r?void 0:r.length)>4){for(var i={},a=function(t){var e=t.key,n=t.key2,r=t.key3,o=t.key4,a=t.key5,c=t.key6,u=t.key7,s=t.key8,l=t.res,h=t.dictionaryKey;e=e?e+"/":"",n=n?n+"/":"",r=r?r+"/":"",o=o?o+"/":"",a=a?a+"/":"",c=c?c+"/":"",u=u?u+"/":"",s=s?s+"/":"";var f=h.includes("-DLO-"),p=h.split("path=/")[1].split("&")[0]+"/";i[p+n+r+o+a+c+u+s]={isDlo:f,res:l}},c=0,u=[];localStorage.key(c);){var s=localStorage.key(c);s.includes("/dlo/scapi/common/dictionary/dictionary")&&u.push(s),c++}u.forEach((function(e){var n=JSON.parse(localStorage.getItem(e));"object"===t(n)&&Object.keys(n).forEach((function(t){n[t]&&("string"==typeof n[t]&&n[t].toLowerCase().includes(r)&&a({key:t,res:n[t],dictionaryKey:e}),Object.keys(n[t]).forEach((function(o){"string"==typeof n[t][o]&&n[t][o].toLowerCase().includes(r)&&a({key:t,key2:o,res:n[t][o],dictionaryKey:e}),Object.keys(n[t][o]).forEach((function(i){"string"==typeof n[t][o][i]&&n[t][o][i].toLowerCase().includes(r)&&a({key:t,key2:o,key3:i,res:n[t][o][i],dictionaryKey:e}),Object.keys(n[t][o][i]).forEach((function(c){"string"==typeof n[t][o][i][c]&&n[t][o][i][c].toLowerCase().includes(r)&&a({key:t,key2:o,key3:i,key4:c,res:n[t][o][i][c],dictionaryKey:e}),Object.keys(n[t][o][i][c]).forEach((function(u){"string"==typeof n[t][o][i][c][u]&&n[t][o][i][c][u].toLowerCase().includes(r)&&a({key:t,key2:o,key3:i,key4:c,key5:u,res:n[t][o][i][c][u],dictionaryKey:e}),Object.keys(n[t][o][i][c][u]).forEach((function(s){"string"==typeof n[t][o][i][c][u][s]&&n[t][o][i][c][u][s].toLowerCase().includes(r)&&a({key:t,key2:o,key3:i,key4:c,key5:u,key6:s,res:n[t][o][i][c][u][s],dictionaryKey:e}),Object.keys(n[t][o][i][c][u][s]).forEach((function(l){"string"==typeof n[t][o][i][c][u][s][l]&&n[t][o][i][c][u][s][l].toLowerCase().includes(r)&&a({key:t,key2:o,key3:i,key4:c,key5:u,key6:s,key7:l,res:n[t][o][i][c][u][s][l],dictionaryKey:e}),Object.keys(n[t][o][i][c][u][s][l]).forEach((function(h){"string"==typeof n[t][o][i][c][u][s][l][h]&&n[t][o][i][c][u][s][l][h].toLowerCase().includes(r)&&a({key:t,key2:o,key3:i,key4:c,key5:u,key6:s,key7:l,key8:h,res:n[t][o][i][c][u][s][l][h],dictionaryKey:e})}))}))}))}))}))}))})))}))}));var l=[];if(Object.keys(i).length>150)return;Object.keys(i).forEach((function(t){var n=e(i[t].isDlo)+t;l.push({txt:i[t].res,url:n,key:t})})),o(l)}else n()})),function(){l.apply(this,arguments)}(),"complete"===document.readyState||"interactive"===document.readyState?k():document.addEventListener("DOMContentLoaded",k),j()&&(location.pathname.includes("/IU-")||location.pathname.includes("/FOR-")||location.pathname.includes("/CW-"))&&("danskespil-website",(D=S())&&_("Create Branch",(function(){window.open("https://github.com/ds-itu-frontend-service/".concat("danskespil-website","/branches?newBranch=").concat(D))}))),function(){U.apply(this,arguments)}(),function(){if(location.host.endsWith("danskespil.dk")&&!location.pathname.startsWith("/sitecore/")){var t=document.getElementById("sitecoreDeveloperErrorStyle");t||((t=document.createElement("style")).id="sitecoreDeveloperErrorStyle",document.body.appendChild(t)),t.innerHTML="\n      .alert.alert-error:has(.developer-alert) {\n        background: rgba(255,0,0,0.7);\n        color: white;\n        font-size: 13px;\n        line-height: 1.5;\n        padding: 10px;\n    }"}}(),location.host.endsWith("danskespil.dk")&&document.addEventListener("keydown",(function(t){"F2"===t.key&&(alert("F2 was pressed"),chrome.runtime.sendMessage({action:"callMyFunction"},(function(t){console.error("xxx CALLING MY FUNCTION xxx",t)})))}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,