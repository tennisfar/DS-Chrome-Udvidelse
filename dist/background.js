/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!***************************!*\
  !*** ./src/background.js ***!
  \***************************/
var favorites = [];
var showGrid = false;
var fastLogin = true;
var dsConfig = null;
chrome.runtime.onInstalled.addListener(function (reason) {
  if (reason === chrome.runtime.OnInstalledReason.INSTALL) {
    chrome.storage.sync.set({
      favorites: favorites
    });
  }
  if (reason === chrome.runtime.OnInstalledReason.UPDATE) {}
  chrome.storage.sync.set({
    showGrid: showGrid
  });
  chrome.storage.sync.set({
    fastLogin: fastLogin
  });
  chrome.storage.sync.set({
    dsConfig: dsConfig
  });
});
chrome.runtime.onMessage.addListener(function (request, sender, sendResponse) {
  if (request.action === 'callMyFunction') {
    sendResponse({
      result: 'Function executed'
    });
  }
});
var TARGET_COOKIE = "DLOSITECORE_JOSSO_SESSIONID";
var LOCAL_HOST = "local.danskespil.dk";
function mirrorToLocal(cookie) {
  var _cookie$secure, _cookie$httpOnly;
  var params = {
    url: "https://".concat(LOCAL_HOST, "/"),
    name: TARGET_COOKIE,
    value: cookie.value,
    path: cookie.path || "/",
    secure: (_cookie$secure = cookie.secure) !== null && _cookie$secure !== void 0 ? _cookie$secure : true,
    httpOnly: (_cookie$httpOnly = cookie.httpOnly) !== null && _cookie$httpOnly !== void 0 ? _cookie$httpOnly : true,
    sameSite: cookie.sameSite || "no_restriction"
  };

  // Preserve expiry if it's a persistent cookie; omit for session cookies.
  if (typeof cookie.expirationDate === "number") {
    params.expirationDate = cookie.expirationDate;
  }
  chrome.cookies.set(params, function (setCookie) {
    if (chrome.runtime.lastError) {
      console.warn("Setting local cookie failed:", chrome.runtime.lastError);
    } else {
      console.log("Mirrored cookie to local:", setCookie);
    }
  });
}

// Listen for cookie creation/updates anywhere under *.danskespil.dk
chrome.cookies.onChanged.addListener(function (details) {
  if (details.removed) return;
  var cookie = details.cookie;

  // Only react to the specific cookie
  if (cookie.name !== TARGET_COOKIE) return;

  // Ignore our own mirror to local to prevent loops
  if (cookie.domain === LOCAL_HOST) return;

  // Only consider cookies belonging to townXX.danskespil.dk
  if (!(cookie.domain.startsWith("town") && cookie.domain.endsWith(".danskespil.dk"))) return;
  mirrorToLocal(cookie);
});
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFja2dyb3VuZC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBLElBQUlBLFNBQVMsR0FBRyxFQUFFO0FBQ2xCLElBQUlDLFFBQVEsR0FBRyxLQUFLO0FBQ3BCLElBQUlDLFNBQVMsR0FBRyxJQUFJO0FBQ3BCLElBQUlDLFFBQVEsR0FBRyxJQUFJO0FBRW5CQyxNQUFNLENBQUNDLE9BQU8sQ0FBQ0MsV0FBVyxDQUFDQyxXQUFXLENBQUMsVUFBQ0MsTUFBTSxFQUFLO0VBQ2pELElBQUlBLE1BQU0sS0FBS0osTUFBTSxDQUFDQyxPQUFPLENBQUNJLGlCQUFpQixDQUFDQyxPQUFPLEVBQUU7SUFDdkROLE1BQU0sQ0FBQ08sT0FBTyxDQUFDQyxJQUFJLENBQUNDLEdBQUcsQ0FBQztNQUFFYixTQUFTLEVBQVRBO0lBQVUsQ0FBQyxDQUFDO0VBQ3hDO0VBRUEsSUFBSVEsTUFBTSxLQUFLSixNQUFNLENBQUNDLE9BQU8sQ0FBQ0ksaUJBQWlCLENBQUNLLE1BQU0sRUFBRSxDQUFDO0VBRXpEVixNQUFNLENBQUNPLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDQyxHQUFHLENBQUM7SUFBRVosUUFBUSxFQUFSQTtFQUFTLENBQUMsQ0FBQztFQUNyQ0csTUFBTSxDQUFDTyxPQUFPLENBQUNDLElBQUksQ0FBQ0MsR0FBRyxDQUFDO0lBQUVYLFNBQVMsRUFBVEE7RUFBVSxDQUFDLENBQUM7RUFDdENFLE1BQU0sQ0FBQ08sT0FBTyxDQUFDQyxJQUFJLENBQUNDLEdBQUcsQ0FBQztJQUFFVixRQUFRLEVBQVJBO0VBQVMsQ0FBQyxDQUFDO0FBQ3ZDLENBQUMsQ0FBQztBQUVGQyxNQUFNLENBQUNDLE9BQU8sQ0FBQ1UsU0FBUyxDQUFDUixXQUFXLENBQUMsVUFBVVMsT0FBTyxFQUFFQyxNQUFNLEVBQUVDLFlBQVksRUFBRTtFQUM1RSxJQUFJRixPQUFPLENBQUNHLE1BQU0sS0FBSyxnQkFBZ0IsRUFBRTtJQUN2Q0QsWUFBWSxDQUFDO01BQUVFLE1BQU0sRUFBRTtJQUFvQixDQUFDLENBQUM7RUFDL0M7QUFDRixDQUFDLENBQUM7QUFFRixJQUFNQyxhQUFhLEdBQUcsNkJBQTZCO0FBQ25ELElBQU1DLFVBQVUsR0FBRyxxQkFBcUI7QUFFeEMsU0FBU0MsYUFBYUEsQ0FBQ0MsTUFBTSxFQUFFO0VBQUEsSUFBQUMsY0FBQSxFQUFBQyxnQkFBQTtFQUM3QixJQUFNQyxNQUFNLEdBQUc7SUFDYkMsR0FBRyxhQUFBQyxNQUFBLENBQWFQLFVBQVUsTUFBRztJQUM3QlEsSUFBSSxFQUFFVCxhQUFhO0lBQ25CVSxLQUFLLEVBQUVQLE1BQU0sQ0FBQ08sS0FBSztJQUNuQkMsSUFBSSxFQUFFUixNQUFNLENBQUNRLElBQUksSUFBSSxHQUFHO0lBQ3hCQyxNQUFNLEdBQUFSLGNBQUEsR0FBRUQsTUFBTSxDQUFDUyxNQUFNLGNBQUFSLGNBQUEsY0FBQUEsY0FBQSxHQUFJLElBQUk7SUFDN0JTLFFBQVEsR0FBQVIsZ0JBQUEsR0FBRUYsTUFBTSxDQUFDVSxRQUFRLGNBQUFSLGdCQUFBLGNBQUFBLGdCQUFBLEdBQUksSUFBSTtJQUNqQ1MsUUFBUSxFQUFFWCxNQUFNLENBQUNXLFFBQVEsSUFBSTtFQUMvQixDQUFDOztFQUVEO0VBQ0EsSUFBSSxPQUFPWCxNQUFNLENBQUNZLGNBQWMsS0FBSyxRQUFRLEVBQUU7SUFDN0NULE1BQU0sQ0FBQ1MsY0FBYyxHQUFHWixNQUFNLENBQUNZLGNBQWM7RUFDL0M7RUFFQWhDLE1BQU0sQ0FBQ2lDLE9BQU8sQ0FBQ3hCLEdBQUcsQ0FBQ2MsTUFBTSxFQUFFLFVBQUNXLFNBQVMsRUFBSztJQUN4QyxJQUFJbEMsTUFBTSxDQUFDQyxPQUFPLENBQUNrQyxTQUFTLEVBQUU7TUFDNUJDLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDLDhCQUE4QixFQUFFckMsTUFBTSxDQUFDQyxPQUFPLENBQUNrQyxTQUFTLENBQUM7SUFDeEUsQ0FBQyxNQUFNO01BQ0xDLE9BQU8sQ0FBQ0UsR0FBRyxDQUFDLDJCQUEyQixFQUFFSixTQUFTLENBQUM7SUFDckQ7RUFDRixDQUFDLENBQUM7QUFDSjs7QUFFQTtBQUNBbEMsTUFBTSxDQUFDaUMsT0FBTyxDQUFDTSxTQUFTLENBQUNwQyxXQUFXLENBQUMsVUFBQ3FDLE9BQU8sRUFBSztFQUNoRCxJQUFJQSxPQUFPLENBQUNDLE9BQU8sRUFBRTtFQUNyQixJQUFNckIsTUFBTSxHQUFHb0IsT0FBTyxDQUFDcEIsTUFBTTs7RUFFN0I7RUFDQSxJQUFJQSxNQUFNLENBQUNNLElBQUksS0FBS1QsYUFBYSxFQUFFOztFQUVuQztFQUNBLElBQUlHLE1BQU0sQ0FBQ3NCLE1BQU0sS0FBS3hCLFVBQVUsRUFBRTs7RUFFbEM7RUFDQSxJQUFJLEVBQUVFLE1BQU0sQ0FBQ3NCLE1BQU0sQ0FBQ0MsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJdkIsTUFBTSxDQUFDc0IsTUFBTSxDQUFDRSxRQUFRLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxFQUFFO0VBRXJGekIsYUFBYSxDQUFDQyxNQUFNLENBQUM7QUFDdkIsQ0FBQyxDQUFDLEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kcy1jaHJvbWUtZXh0ZW5zaW9uLy4vc3JjL2JhY2tncm91bmQuanMiXSwic291cmNlc0NvbnRlbnQiOlsibGV0IGZhdm9yaXRlcyA9IFtdO1xyXG5sZXQgc2hvd0dyaWQgPSBmYWxzZTtcclxubGV0IGZhc3RMb2dpbiA9IHRydWU7XHJcbmxldCBkc0NvbmZpZyA9IG51bGw7XHJcblxyXG5jaHJvbWUucnVudGltZS5vbkluc3RhbGxlZC5hZGRMaXN0ZW5lcigocmVhc29uKSA9PiB7XHJcbiAgaWYgKHJlYXNvbiA9PT0gY2hyb21lLnJ1bnRpbWUuT25JbnN0YWxsZWRSZWFzb24uSU5TVEFMTCkge1xyXG4gICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyBmYXZvcml0ZXMgfSk7XHJcbiAgfVxyXG4gIFxyXG4gIGlmIChyZWFzb24gPT09IGNocm9tZS5ydW50aW1lLk9uSW5zdGFsbGVkUmVhc29uLlVQREFURSkge31cclxuXHJcbiAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyBzaG93R3JpZCB9KTtcclxuICBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7IGZhc3RMb2dpbiB9KTtcclxuICBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7IGRzQ29uZmlnIH0pO1xyXG59KTtcclxuXHJcbmNocm9tZS5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihmdW5jdGlvbiAocmVxdWVzdCwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpIHtcclxuICBpZiAocmVxdWVzdC5hY3Rpb24gPT09ICdjYWxsTXlGdW5jdGlvbicpIHtcclxuICAgIHNlbmRSZXNwb25zZSh7IHJlc3VsdDogJ0Z1bmN0aW9uIGV4ZWN1dGVkJyB9KTtcclxuICB9XHJcbn0pO1xyXG5cclxuY29uc3QgVEFSR0VUX0NPT0tJRSA9IFwiRExPU0lURUNPUkVfSk9TU09fU0VTU0lPTklEXCI7XHJcbmNvbnN0IExPQ0FMX0hPU1QgPSBcImxvY2FsLmRhbnNrZXNwaWwuZGtcIjtcclxuXHJcbmZ1bmN0aW9uIG1pcnJvclRvTG9jYWwoY29va2llKSB7XHJcbiAgY29uc3QgcGFyYW1zID0ge1xyXG4gICAgdXJsOiBgaHR0cHM6Ly8ke0xPQ0FMX0hPU1R9L2AsXHJcbiAgICBuYW1lOiBUQVJHRVRfQ09PS0lFLFxyXG4gICAgdmFsdWU6IGNvb2tpZS52YWx1ZSxcclxuICAgIHBhdGg6IGNvb2tpZS5wYXRoIHx8IFwiL1wiLFxyXG4gICAgc2VjdXJlOiBjb29raWUuc2VjdXJlID8/IHRydWUsXHJcbiAgICBodHRwT25seTogY29va2llLmh0dHBPbmx5ID8/IHRydWUsXHJcbiAgICBzYW1lU2l0ZTogY29va2llLnNhbWVTaXRlIHx8IFwibm9fcmVzdHJpY3Rpb25cIlxyXG4gIH07XHJcblxyXG4gIC8vIFByZXNlcnZlIGV4cGlyeSBpZiBpdCdzIGEgcGVyc2lzdGVudCBjb29raWU7IG9taXQgZm9yIHNlc3Npb24gY29va2llcy5cclxuICBpZiAodHlwZW9mIGNvb2tpZS5leHBpcmF0aW9uRGF0ZSA9PT0gXCJudW1iZXJcIikge1xyXG4gICAgcGFyYW1zLmV4cGlyYXRpb25EYXRlID0gY29va2llLmV4cGlyYXRpb25EYXRlO1xyXG4gIH1cclxuXHJcbiAgY2hyb21lLmNvb2tpZXMuc2V0KHBhcmFtcywgKHNldENvb2tpZSkgPT4ge1xyXG4gICAgaWYgKGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcikge1xyXG4gICAgICBjb25zb2xlLndhcm4oXCJTZXR0aW5nIGxvY2FsIGNvb2tpZSBmYWlsZWQ6XCIsIGNocm9tZS5ydW50aW1lLmxhc3RFcnJvcik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zb2xlLmxvZyhcIk1pcnJvcmVkIGNvb2tpZSB0byBsb2NhbDpcIiwgc2V0Q29va2llKTtcclxuICAgIH1cclxuICB9KTtcclxufVxyXG5cclxuLy8gTGlzdGVuIGZvciBjb29raWUgY3JlYXRpb24vdXBkYXRlcyBhbnl3aGVyZSB1bmRlciAqLmRhbnNrZXNwaWwuZGtcclxuY2hyb21lLmNvb2tpZXMub25DaGFuZ2VkLmFkZExpc3RlbmVyKChkZXRhaWxzKSA9PiB7XHJcbiAgaWYgKGRldGFpbHMucmVtb3ZlZCkgcmV0dXJuO1xyXG4gIGNvbnN0IGNvb2tpZSA9IGRldGFpbHMuY29va2llO1xyXG5cclxuICAvLyBPbmx5IHJlYWN0IHRvIHRoZSBzcGVjaWZpYyBjb29raWVcclxuICBpZiAoY29va2llLm5hbWUgIT09IFRBUkdFVF9DT09LSUUpIHJldHVybjtcclxuXHJcbiAgLy8gSWdub3JlIG91ciBvd24gbWlycm9yIHRvIGxvY2FsIHRvIHByZXZlbnQgbG9vcHNcclxuICBpZiAoY29va2llLmRvbWFpbiA9PT0gTE9DQUxfSE9TVCkgcmV0dXJuO1xyXG5cclxuICAvLyBPbmx5IGNvbnNpZGVyIGNvb2tpZXMgYmVsb25naW5nIHRvIHRvd25YWC5kYW5za2VzcGlsLmRrXHJcbiAgaWYgKCEoY29va2llLmRvbWFpbi5zdGFydHNXaXRoKFwidG93blwiKSAmJiBjb29raWUuZG9tYWluLmVuZHNXaXRoKFwiLmRhbnNrZXNwaWwuZGtcIikpKSByZXR1cm47XHJcblxyXG4gIG1pcnJvclRvTG9jYWwoY29va2llKTtcclxufSk7XHJcbiJdLCJuYW1lcyI6WyJmYXZvcml0ZXMiLCJzaG93R3JpZCIsImZhc3RMb2dpbiIsImRzQ29uZmlnIiwiY2hyb21lIiwicnVudGltZSIsIm9uSW5zdGFsbGVkIiwiYWRkTGlzdGVuZXIiLCJyZWFzb24iLCJPbkluc3RhbGxlZFJlYXNvbiIsIklOU1RBTEwiLCJzdG9yYWdlIiwic3luYyIsInNldCIsIlVQREFURSIsIm9uTWVzc2FnZSIsInJlcXVlc3QiLCJzZW5kZXIiLCJzZW5kUmVzcG9uc2UiLCJhY3Rpb24iLCJyZXN1bHQiLCJUQVJHRVRfQ09PS0lFIiwiTE9DQUxfSE9TVCIsIm1pcnJvclRvTG9jYWwiLCJjb29raWUiLCJfY29va2llJHNlY3VyZSIsIl9jb29raWUkaHR0cE9ubHkiLCJwYXJhbXMiLCJ1cmwiLCJjb25jYXQiLCJuYW1lIiwidmFsdWUiLCJwYXRoIiwic2VjdXJlIiwiaHR0cE9ubHkiLCJzYW1lU2l0ZSIsImV4cGlyYXRpb25EYXRlIiwiY29va2llcyIsInNldENvb2tpZSIsImxhc3RFcnJvciIsImNvbnNvbGUiLCJ3YXJuIiwibG9nIiwib25DaGFuZ2VkIiwiZGV0YWlscyIsInJlbW92ZWQiLCJkb21haW4iLCJzdGFydHNXaXRoIiwiZW5kc1dpdGgiXSwic291cmNlUm9vdCI6IiJ9